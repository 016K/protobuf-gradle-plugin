import org.gradle.api.artifacts.maven.MavenDeployment

println """\
Welcome to Gradle $gradle.gradleVersion - http://www.gradle.org
Gradle home is set to: $gradle.gradleHomeDir
Gradle user directory is set to: $gradle.gradleUserHomeDir

Base directory: $projectDir
Running script ${relativePath(buildFile)}
"""

apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'git'
apply plugin: 'com.jfrog.bintray'
apply plugin: "com.gradle.plugin-publish"

apply plugin: 'signing'

group = 'com.google.protobuf'
version = '0.3.2-SNAPSHOT'

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'org.ajoberstar:gradle-git:0.1.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.5'
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.0"
    }
}

test {
    //jvmArgs '-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005'
    //debug true
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile gradleApi()
    testCompile group: 'junit', name: 'junit', version: '4.8.1'
    compile localGroovy()
    compile 'com.google.gradle:osdetector-gradle-plugin:1.2.1'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

task sourcesJar(type: Jar, dependsOn:classes) {
     classifier = 'sources'
     from sourceSets.main.allSource
}

task groovydocJar(type: Jar, dependsOn:groovydoc) {
     classifier = 'groovydoc'
     from groovydoc.destinationDir
}

task javadocJar(type: Jar, dependsOn:javadoc) {
     classifier = 'javadoc'
     from javadoc.destinationDir
}

artifacts {
     archives sourcesJar
     archives groovydocJar
     archives javadocJar
}

signing {
     required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
     sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        if (rootProject.hasProperty("ossrhUsername") && rootProject.hasProperty("ossrhPassword")) {
          authentication(userName: ossrhUsername, password: ossrhPassword)
        }
      }
      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        if (rootProject.hasProperty("ossrhUsername") && rootProject.hasProperty("ossrhPassword")) {
          authentication(userName: ossrhUsername, password: ossrhPassword)
        }
      }
      pom.project {
        name project.name
        description "Gradle build plugin to handle Protocol Buffers automated code generation and compilation"
        url "https://github.com/google/protobuf-gradle-plugin"
        licenses {
          license {
            name "BSD 3-Clause"
            url "http://opensource.org/licenses/BSD-3-Clause"
          }
        }
        developers {
          developer {
            id "zhangkun83"
            name "Kun Zhang"
            email "zhangkun@google.com"
          }
        }
        scm {
          connection "scm:git:git://github.com/google/protobuf-gradle-plugin.git"
          developerConnection "scm:git:git@github.com:google/protobuf-gradle-plugin.git"
          url "https://github.com/google/protobuf-gradle-plugin"
        }
      }
    }
  }
}

pluginBundle {
  website = 'https://github.com/google/protobuf-gradle-plugin'
  vcsUrl = 'https://github.com/google/protobuf-gradle-plugin'
  description = 'The Protobuf plugin provides protobuf compilation to your project.'

  plugins {
      protobufPlugin {
          id = 'com.google.protobuf'
          displayName = 'Protobuf Plugin for Gradle'
          tags = ['protobuf', 'protocol-buffers']
      }
  }
}
